import React, { useState } from "react";
import { 
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  DialogFooter
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Copy, Share2, Gift, Check, Mail } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { Card, CardContent } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";

const ReferralSystem = () => {
  const [isCopied, setIsCopied] = useState(false);
  const [email, setEmail] = useState("");
  const [emailSent, setEmailSent] = useState(false);
  const [isOpen, setIsOpen] = useState(false);
  const { toast } = useToast();
  
  // In a real app, this would come from the user's profile or be generated by the backend
  const referralCode = "SPLITSTAY10";
  const referralUrl = `https://splitstay.travel?ref=${referralCode}`;
  
  const handleCopy = () => {
    navigator.clipboard.writeText(referralUrl).then(() => {
      setIsCopied(true);
      
      toast({
        title: "Copied to clipboard!",
        description: "Your referral link is ready to share."
      });
      
      setTimeout(() => {
        setIsCopied(false);
      }, 2000);
    });
  };
  
  const handleShare = () => {
    if (navigator.share) {
      navigator.share({
        title: 'Join me on SplitStay',
        text: 'Find roommates for your next trip and save money. Use my referral code for $10 off your first booking!',
        url: referralUrl,
      })
      .catch((error) => console.log('Error sharing', error));
    } else {
      handleCopy();
    }
  };
  
  const handleEmailSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // In a real app, this would make an API call to send the email
    console.log(`Sending referral email to ${email}`);
    
    setEmailSent(true);
    
    toast({
      title: "Invitation sent!",
      description: `Invited ${email} to join SplitStay.`
    });
    
    setTimeout(() => {
      setEmailSent(false);
      setEmail("");
      setIsOpen(false);
    }, 2000);
  };
  
  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>
        <Button variant="outline" className="flex items-center gap-2">
          <Gift className="h-4 w-4" />
          <span>Refer & Earn $10</span>
        </Button>
      </DialogTrigger>
      
      <DialogContent className="sm:max-w-md">
        <DialogHeader>
          <DialogTitle className="text-xl">Refer a Friend, Earn $10</DialogTitle>
          <DialogDescription>
            When a friend books their first trip with your code, you'll both get $10 credit.
          </DialogDescription>
        </DialogHeader>
        
        <div className="space-y-4 py-4">
          <div className="flex flex-col gap-3">
            <Card className="border-2 border-primary/10 bg-primary/5">
              <CardContent className="pt-6 px-4 pb-4">
                <div className="text-center">
                  <Gift className="h-12 w-12 text-primary mx-auto mb-2" />
                  <h3 className="text-lg font-semibold mb-1">How it works</h3>
                  <p className="text-sm text-gray-600 mb-3">
                    Share your referral link with friends who travel solo
                  </p>
                  
                  <div className="flex items-center justify-between gap-2 text-sm">
                    <div className="flex-1 border border-gray-200 rounded-md p-2 bg-white">
                      <span className="font-medium block">They sign up</span>
                    </div>
                    <div className="flex-1 border border-gray-200 rounded-md p-2 bg-white">
                      <span className="font-medium block">Make a booking</span>
                    </div>
                    <div className="flex-1 border border-gray-200 rounded-md p-2 bg-white">
                      <span className="font-medium block">Both get $10</span>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <div className="space-y-3">
              <Label htmlFor="referral-link" className="text-sm font-medium">
                Your personal referral link
              </Label>
              <div className="flex items-center space-x-2">
                <div className="grid flex-1 gap-2">
                  <Input
                    id="referral-link"
                    readOnly
                    value={referralUrl}
                    className="h-10"
                  />
                </div>
                <Button 
                  type="button" 
                  variant="outline" 
                  className="h-10 px-3"
                  onClick={handleCopy}
                >
                  {isCopied ? (
                    <Check className="h-4 w-4" />
                  ) : (
                    <Copy className="h-4 w-4" />
                  )}
                </Button>
                <Button
                  type="button"
                  variant="outline"
                  className="h-10 px-3"
                  onClick={handleShare}
                >
                  <Share2 className="h-4 w-4" />
                </Button>
              </div>
              <p className="text-xs text-gray-500">
                Or share referral code: <span className="font-mono font-medium">{referralCode}</span>
              </p>
            </div>
            
            <Separator className="my-2" />
            
            <form onSubmit={handleEmailSubmit}>
              <div className="space-y-3">
                <Label htmlFor="email-invite" className="text-sm font-medium">
                  Or invite friends via email
                </Label>
                <div className="flex items-center space-x-2">
                  <div className="grid flex-1 gap-2">
                    <Input
                      id="email-invite"
                      type="email"
                      placeholder="friend@example.com"
                      className="h-10"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      required
                    />
                  </div>
                  <Button 
                    type="submit" 
                    className="h-10 bg-primary"
                    disabled={!email || emailSent}
                  >
                    {emailSent ? (
                      <Check className="h-4 w-4" />
                    ) : (
                      <Mail className="h-4 w-4 mr-1" />
                    )}
                    {emailSent ? "Sent" : "Send"}
                  </Button>
                </div>
              </div>
            </form>
          </div>
        </div>
        
        <DialogFooter className="flex flex-col sm:flex-row sm:justify-between">
          <Button
            type="button"
            variant="secondary"
            onClick={() => setIsOpen(false)}
          >
            Close
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};

export default ReferralSystem;